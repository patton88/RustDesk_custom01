name: Build Windows x64 RustDesk

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

env:
  RUST_VERSION: "1.75"
  FLUTTER_VERSION: "3.24.5"
  LLVM_VERSION: "15.0.6"
  VCPKG_COMMIT_ID: "6f29f12e82a8293156836ad81cc9bf5af41fe836"
  VERSION: "1.4.1-custom"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  generate-bridge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Flutter
        uses: subosito/flutter-action@v2.12.0
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Generate bridge files
        run: |
          cd flutter
          flutter pub get
          # Install flutter_rust_bridge_codegen
          cargo install flutter_rust_bridge_codegen --version 1.80.1 --features uuid
          # Generate bridge files
          ~/.cargo/bin/flutter_rust_bridge_codegen --rust-input ../src/flutter_ffi.rs --dart-output ./lib/generated_bridge.dart
          # Create generated directory if it doesn't exist
          mkdir -p lib/generated
          # Copy generated files to generated directory
          if [ -f lib/generated_bridge.dart ]; then
            cp lib/generated_bridge.dart lib/generated/
            echo "Bridge file generated successfully"
          else
            echo "Failed to generate bridge file"
            exit 1
          fi
          if [ -d lib/generated ]; then
            ls -la lib/generated/
          fi

      - name: Upload bridge files
        uses: actions/upload-artifact@master
        with:
          name: bridge-artifact
          path: flutter/lib/generated/

  build-windows-x64:
    name: Build Windows x64
    needs: [generate-bridge]
    runs-on: windows-2022
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: flutter/lib/generated/

      - name: Copy bridge files to lib directory
        run: |
          if [ -f flutter/lib/generated/generated_bridge.dart ]; then
            cp flutter/lib/generated/generated_bridge.dart flutter/lib/
            echo "Bridge file restored successfully"
          else
            echo "No bridge file found, will generate during build"
          fi

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{ env.LLVM_VERSION }}

      - name: Install Flutter
        uses: subosito/flutter-action@v2.12.0
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Replace engine with rustdesk custom flutter engine
        run: |
          flutter doctor -v
          flutter precache --windows
          Invoke-WebRequest -Uri https://github.com/rustdesk/engine/releases/download/main/windows-x64-release.zip -OutFile windows-x64-release.zip
          Expand-Archive -Path windows-x64-release.zip -DestinationPath windows-x64-release
          mv -Force windows-x64-release/*  C:/hostedtoolcache/windows/flutter/stable-${{ env.FLUTTER_VERSION }}-x64/bin/cache/artifacts/engine/windows-x64-release/

      - name: Patch flutter
        shell: bash
        run: |
          cp .github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff $(dirname $(dirname $(which flutter)))
          cd $(dirname $(dirname $(which flutter)))
          [[ "3.24.5" == ${{env.FLUTTER_VERSION}} ]] && git apply flutter_3.24.4_dropdown_menu_enableFilter.diff

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: x86_64-pc-windows-msvc
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: windows-2022

      - name: Setup vcpkg with Github Actions binary cache
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: C:\vcpkg
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          doNotCache: false

      - name: Install vcpkg dependencies
        env:
          VCPKG_DEFAULT_HOST_TRIPLET: x64-windows-static
        run: |
          if ! $VCPKG_ROOT/vcpkg \
            install \
            --triplet x64-windows-static \
            --x-install-root="$VCPKG_ROOT/installed"; then
            find "${VCPKG_ROOT}/" -name "*.log" | while read -r _1; do
              echo "$_1:"
              echo "======"
              cat "$_1"
              echo "======"
              echo ""
            done
            exit 1
          fi
          head -n 100 "${VCPKG_ROOT}/buildtrees/ffmpeg/build-x64-windows-static-rel-out.log" || true
        shell: bash

      - name: Build rustdesk
        run: |
          # Windows: build RustDesk
          python3 .\build.py --portable --hwcodec --flutter --vram --skip-portable-pack
          mv ./flutter/build/windows/x64/runner/Release ./rustdesk

          # Download usbmmidd_v2.zip and extract it to ./rustdesk
          Invoke-WebRequest -Uri https://github.com/rustdesk-org/rdev/releases/download/usbmmidd_v2/usbmmidd_v2.zip -OutFile usbmmidd_v2.zip
          Expand-Archive usbmmidd_v2.zip -DestinationPath .
          Remove-Item -Path usbmmidd_v2\Win32 -Recurse
          Remove-Item -Path "usbmmidd_v2\deviceinstaller64.exe", "usbmmidd_v2\deviceinstaller.exe", "usbmmidd_v2\usbmmidd.bat"
          mv -Force .\usbmmidd_v2 ./rustdesk

      - name: Upload RustDesk.exe
        uses: actions/upload-artifact@master
        with:
          name: RustDesk-Windows-x64
          path: rustdesk/rustdesk.exe

      - name: Create release package
        run: |
          # Create a zip file with the executable
          Compress-Archive -Path ./rustdesk/* -DestinationPath ./RustDesk-Windows-x64-${{ env.VERSION }}.zip

      - name: Upload release package
        uses: actions/upload-artifact@master
        with:
          name: RustDesk-Windows-x64-Package
          path: RustDesk-Windows-x64-${{ env.VERSION }}.zip

      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: RustDesk Custom v${{ env.VERSION }}
          body: |
            ## RustDesk Custom Build
            
            This is a custom build of RustDesk with additional command line parameters:
            
            - `--fullscreen=true/false`: Set fullscreen or window mode
            - `--collapse_toolbar=true/false`: Hide or show toolbar by default
            - `--desktop_scaling=true/false`: Scale desktop to fit window or keep original size
            
            ### Changes from original RustDesk:
            - Added support for command line parameters to control UI behavior
            - Enhanced remote desktop experience with customizable settings
            
            ### Usage Examples:
            ```
            # Start in fullscreen mode with hidden toolbar
            rustdesk.exe --fullscreen=true --collapse_toolbar=true
            
            # Start in window mode with desktop scaling
            rustdesk.exe --fullscreen=false --desktop_scaling=true
            ```
          files: |
            RustDesk-Windows-x64-${{ env.VERSION }}.zip
          draft: false
          prerelease: false
