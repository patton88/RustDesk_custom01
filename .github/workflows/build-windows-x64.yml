name: Build Windows x64 RustDesk

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

env:
  RUST_VERSION: "1.75"
  FLUTTER_VERSION: "3.24.5"
  LLVM_VERSION: "15.0.6"
  VCPKG_COMMIT_ID: "6f29f12e82a8293156836ad81cc9bf5af41fe836"
  VERSION: "1.4.2-custom"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  generate-bridge:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install prerequisites
        run: |
          sudo apt-get install ca-certificates -y
          sudo apt-get update -y
          sudo apt-get install -y \
            clang \
            cmake \
            curl \
            gcc \
            git \
            g++ \
            libclang-dev \
            libgtk-3-dev \
            llvm-dev \
            nasm \
            ninja-build \
            pkg-config \
            wget

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: x86_64-unknown-linux-gnu
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: bridge-ubuntu-22.04

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Install flutter rust bridge deps
        shell: bash
        run: |
          cargo install cargo-expand --version 1.0.95 --locked
          cargo install flutter_rust_bridge_codegen --version 1.80.1 --features "uuid" --locked
          
          # Get Flutter dependencies
          pushd flutter
          flutter pub get
          popd

      - name: Run flutter rust bridge
        run: |
          # Generate all bridge files in one command
          ~/.cargo/bin/flutter_rust_bridge_codegen \
            --rust-input ./src/flutter_ffi.rs \
            --dart-output ./flutter/lib/generated_bridge.dart \
            --rust-output ./src/bridge_generated.rs \
            --c-output ./flutter/macos/Runner/bridge_generated.h
          
          # Copy header file to iOS location
          cp ./flutter/macos/Runner/bridge_generated.h ./flutter/ios/Runner/bridge_generated.h
          
          # Create empty .io.rs file to satisfy build requirements
          echo "// Auto-generated bridge file for IO operations" > ./src/bridge_generated.io.rs
          
          # Debug: Check if files were generated
          echo "Checking generated files..."
          ls -la ./src/bridge_generated.rs
          ls -la ./src/bridge_generated.io.rs
          ls -la ./flutter/lib/generated_bridge.dart
          ls -la ./flutter/macos/Runner/bridge_generated.h

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: bridge-artifact
          path: |
            ./src/bridge_generated.rs
            ./src/bridge_generated.io.rs
            ./flutter/lib/generated_bridge.dart
            ./flutter/lib/generated_bridge.freezed.dart
            ./flutter/macos/Runner/bridge_generated.h
            ./flutter/ios/Runner/bridge_generated.h

  build-windows-x64:
    name: Build Windows x64
    needs: [generate-bridge]
    runs-on: windows-2022
    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: ./

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{ env.LLVM_VERSION }}

      - name: Install Flutter
        uses: subosito/flutter-action@v2.12.0 #https://github.com/subosito/flutter-action/issues/277
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Fix Flutter dependencies
        run: |
          # Clean Flutter build cache
          pushd flutter
          Write-Host "Cleaning Flutter build cache..."
          flutter clean
          flutter pub get
          popd

      - name: Replace engine with rustdesk custom flutter engine
        run: |
          flutter doctor -v
          flutter precache --windows
          
          # Debug: Check Flutter installation path
          $flutterPath = (Get-Command flutter).Source
          $flutterDir = Split-Path -Parent (Split-Path -Parent $flutterPath)
          Write-Host "Flutter directory: $flutterDir"
          
          # Check if engine directory exists
          $engineDir = "C:\hostedtoolcache\windows\flutter\stable-${{ env.FLUTTER_VERSION }}-x64\bin\cache\artifacts\engine\windows-x64-release"
          Write-Host "Target engine directory: $engineDir"
          
          if (Test-Path $engineDir) {
            Write-Host "Engine directory exists"
            Get-ChildItem $engineDir | Select-Object Name
          } else {
            Write-Host "Engine directory does not exist, creating it"
            New-Item -ItemType Directory -Path $engineDir -Force
          }
          
          # Download and extract engine
          Write-Host "Downloading RustDesk custom Flutter engine..."
          Invoke-WebRequest -Uri https://github.com/rustdesk/engine/releases/download/main/windows-x64-release.zip -OutFile windows-x64-release.zip
          
          Write-Host "Extracting engine files..."
          Expand-Archive -Path windows-x64-release.zip -DestinationPath windows-x64-release -Force
          
          Write-Host "Moving engine files..."
          Move-Item -Path "windows-x64-release\*" -Destination $engineDir -Force
          
          Write-Host "Engine replacement completed. Contents:"
          Get-ChildItem $engineDir | Select-Object Name
          
          # Clean up
          Remove-Item -Path "windows-x64-release.zip" -Force -ErrorAction SilentlyContinue
          Remove-Item -Path "windows-x64-release" -Recurse -Force -ErrorAction SilentlyContinue

      - name: Patch flutter
        shell: bash
        run: |
          cp .github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff $(dirname $(dirname $(which flutter)))
          cd $(dirname $(dirname $(which flutter)))
          [[ "3.24.5" == ${{env.FLUTTER_VERSION}} ]] && git apply flutter_3.24.4_dropdown_menu_enableFilter.diff

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: x86_64-pc-windows-msvc
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: windows-2022

      - name: Setup vcpkg with Github Actions binary cache
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: C:\vcpkg
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          doNotCache: false

      - name: Install vcpkg dependencies
        env:
          VCPKG_DEFAULT_HOST_TRIPLET: x64-windows-static
        run: |
          if (!(& "$env:VCPKG_ROOT\vcpkg.exe" install --triplet x64-windows-static --x-install-root="$env:VCPKG_ROOT\installed")) {
            Get-ChildItem -Path "$env:VCPKG_ROOT" -Recurse -Filter "*.log" | ForEach-Object {
              Write-Host "$($_.FullName):"
              Write-Host "======"
              Get-Content $_.FullName
              Write-Host "======"
              Write-Host ""
            }
            exit 1
          }
          Get-Content "$env:VCPKG_ROOT\buildtrees\ffmpeg\build-x64-windows-static-rel-out.log" -Head 100 -ErrorAction SilentlyContinue

      - name: Build rustdesk
        run: |
          # Windows: build RustDesk
          Write-Host "Starting RustDesk build..."
          python3 .\build.py --portable --hwcodec --flutter --vram --skip-portable-pack
          
          # Check if flutter build directory exists
          Write-Host "Checking flutter build directory..."
          if (Test-Path ".\flutter\build\windows\x64\runner\Release") {
            Write-Host "Flutter build directory found"
            Move-Item -Path ".\flutter\build\windows\x64\runner\Release" -Destination ".\rustdesk"
          } else {
            Write-Host "Flutter build directory not found. Checking flutter directory structure..."
            Get-ChildItem -Path ".\flutter\build" -Recurse -ErrorAction SilentlyContinue | Select-Object FullName
            Write-Host "Flutter build failed. Exiting."
            exit 1
          }

          # Download usbmmidd_v2.zip and extract it to ./rustdesk
          Invoke-WebRequest -Uri https://github.com/rustdesk-org/rdev/releases/download/usbmmidd_v2/usbmmidd_v2.zip -OutFile usbmmidd_v2.zip
          Expand-Archive usbmmidd_v2.zip -DestinationPath .
          Remove-Item -Path "usbmmidd_v2\Win32" -Recurse
          Remove-Item -Path "usbmmidd_v2\deviceinstaller64.exe", "usbmmidd_v2\deviceinstaller.exe", "usbmmidd_v2\usbmmidd.bat"
          Move-Item -Path ".\usbmmidd_v2" -Destination ".\rustdesk" -Force

      - name: Upload RustDesk.exe
        uses: actions/upload-artifact@master
        with:
          name: RustDesk-Windows-x64
          path: rustdesk/rustdesk.exe

      - name: Create release package
        run: |
          # Create a zip file with the executable
          Compress-Archive -Path ./rustdesk/* -DestinationPath ./RustDesk-Windows-x64-${{ env.VERSION }}.zip

      - name: Upload release package
        uses: actions/upload-artifact@master
        with:
          name: RustDesk-Windows-x64-Package
          path: RustDesk-Windows-x64-${{ env.VERSION }}.zip

      - name: Check if tag exists
        id: check_tag
        run: |
          $tagExists = $false
          try {
            $response = Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/tags" -Headers @{Authorization = "token ${{ secrets.GITHUB_TOKEN }}"}
            foreach ($tag in $response) {
              if ($tag.name -eq "v${{ env.VERSION }}") {
                $tagExists = $true
                break
              }
            }
          } catch {
            Write-Host "Error checking tags: $($_.Exception.Message)"
          }
          echo "tag_exists=$tagExists" >> $env:GITHUB_OUTPUT
          Write-Host "Tag v${{ env.VERSION }} exists: $tagExists"

      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && steps.check_tag.outputs.tag_exists != 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: RustDesk Custom v${{ env.VERSION }}
          body: |
            ## RustDesk Custom Build
            
            This is a custom build of RustDesk with additional command line parameters:
            
            - `--fullscreen=true/false`: Set fullscreen or window mode
            - `--collapse_toolbar=true/false`: Hide or show toolbar by default
            - `--desktop_scaling=true/false`: Scale desktop to fit window or keep original size
            
            ### Changes from original RustDesk:
            - Added support for command line parameters to control UI behavior
            - Enhanced remote desktop experience with customizable settings
            
            ### Usage Examples:
            ```
            # Start in fullscreen mode with hidden toolbar
            rustdesk.exe --fullscreen=true --collapse_toolbar=true
            
            # Start in window mode with desktop scaling
            rustdesk.exe --fullscreen=false --desktop_scaling=true
            ```
          files: |
            RustDesk-Windows-x64-${{ env.VERSION }}.zip
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_unmatched_files: false

      - name: Skip Release (tag exists)
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && steps.check_tag.outputs.tag_exists == 'true'
        run: |
          Write-Host "Tag v${{ env.VERSION }} already exists, skipping release creation"
          Write-Host "You can manually create a release or update the VERSION environment variable"
